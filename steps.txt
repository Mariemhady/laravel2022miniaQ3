1- php -v  ==> >= 7.4 
2- install composer --> composer -v 
3-  option 1 : 
        composer global require laravel/installer
        laravel new projectName

    option 2 : 
        composer create-project laravel/laravel projectName

4- cd projectName
php artisan 
5- php artisan serve 
6- if you need to change the port: 
        php artisan serve --port 7000


mvc --> models views controller routing
--------------------------------------------------

mvc 


Routing --> 

view --> 
---------------------------------------------------------


1- layout --> @extends 
                @yeild 
                @section
2- controller 


 1- naming conv. 

        controller --> single --> Post, Comment, Student

        Routes --> Plural --> posts, comments 

        Table --> Plural 


 2- cmd line       
        php artisan make:controller PostController 

     -----------------------------------------

     1- controller --> php artisan make:controller StudentController 


     2- index ---> 
        web.php --> Route 
                Route::get("students", [StudentController::class, "index" ])   

3- Button --> form 

Database Connection 

        1- Database name 
                        .env --> my Database name

        2- Migrations 

                        php artisan migrate 


        create Database 
        run migration 
        create table --> php artisan make:migration create_posts_table
        run migration --> php artisan migrate


        controller --> Model   --> Database 

        create model 

        1- each table has model, 
                model represent record in the table  --> 
                Post --> php artisan make:model Post
----------------------------------------------------------------

Crud --> create list update delete show 

.env --> Database name --> Restart server 

routes --> web.php 
                Route::get("/posts", [PostController:class, "index"])

controller --> php artisan make:controller PostController

php artisan make:migration create_posts_table 

php artisan migrate

php artisan make:model Post 



controller : 
        list 
                Post::all()

        create 
                new Post 
                --> title 
                --> body 

-------------------------------------------

        edit button --> id --> get data
        submit --> update --> id 
--------------------------------------- 


Index --> list 
show --> view single
create --> redirect to form 
store --> save new item
edit --> redirect to form
update --> update item 
delete --> delete item 

// model + resource controller -->  php artisan make:controller BlogController -r -m Blog
// route --> Route::resource("blogs", BlogController::class);

// table 
-------------------------------------------------------
seeding + factory 

1- factory 
        php artisan make:factory PostFactory --model=Post

        inside file --> 
                "title"=>$this->faker->name(),
2- Seeder
        php artisan make:seed PostTableSeeder
                 inside file -->   
                 Blog::factory()->count(50)->create();   

php artisan db:seed --class=PostTableSeeder          

-----------------------------------------
// login register signin 
Simple Auth: 
        1- composer require laravel/ui
        2- php artisan ui bootstrap
        3- php artisan ui bootstrap --auth
        4- npm install resolve-url-loader@^5.0.0 --save-dev --legacy-peer-deps
        5- npm install && npm run dev
        6- php artisan serve


Auth with Jetstream:
        1- composer require laravel/jetstream
        2- php artisan jetstream:install livewire
        3- php artisan migrate
        4- npm install
        5- npm run dev
        6- php artisan serve




---------------------------------------

Blog -- User --> Relation --> one to many 


table blog --> user_id 




table user 



1- add user_id --> table blogs 
2- relation --> one to many 
3- hasmany , belongsto 
4- store --> user id


1- name --> <a>
2- route --> userController -->  
3- file 


-----------------------------------------------

post user --> one to many 

1- table posts --> user_id
            1-    php artisan make:migration add_user_id_to_posts_table

          (in the migration file)       $table->unsignedBigInteger('user_id');
            $table->foreign("user_id")->references("id")->on("users")->onDelete('cascade');

2- relation --> 
        user has many posts 
        post belongs to user
        Model 
        1- User.php 
                 public function posts()
                        {
                                return $this->hasMany(Post::class);
                        }
        2- Post.php
                public function user(){
                        return $this->belongsTo(User::class);
                }

3- 

------------------------------------------------------

Article user --> relation --> one to many
----------------------------------------

table role (id ) --> user 

user --> role 
-------------------------
admin --> files 

user --> files 

manager --> files 

guest --> files


